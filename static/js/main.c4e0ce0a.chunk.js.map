{"version":3,"sources":["components/Header.js","components/Footer.js","components/Modal.js","components/quote/Author.js","components/quote/Quote.js","components/loader/Loader.js","components/loader/LoadingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","handleRandom","RandomButton","styled","button","className","onClick","xmlns","viewBox","fill","width","height","d","Footer","SiteFooter","footer","Modal","lights","modal","setModal","author","toggleOpen","isOpen","useState","quotes","setQuotes","didMount","setDidMount","url","useEffect","axios","get","then","res","data","catch","err","console","log","ModalContainer","motion","div","ModalHeading","CloseModal","QuoteContainer","GenreLabel","subTextLights","classnames","List","dimBackground","style","variants","open","opacity","transition","type","closed","duration","delay","e","display","marginRight","marginTop","x","stiffness","restDelta","animate","backgroundLights","map","quote","quoteText","quoteGenre","id","Author","fullname","genre","useCycle","Quote","text","QuoteText","h2","Loader","props","LoaderContainer","LoaderDiv","message","LoadingScreen","App","random","setRandom","setQuote","loading","setLoading","window","location","reload","quoteRes","error","quoteAuthor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4e0ce0a.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n\nfunction Header({handleRandom}) {\n\n    const RandomButton = styled.button`\n    background: none;\n    border: none;\n    display: flex;\n    width: 100px;\n    justify-content: space-evenly;\n    &:focus {\n        outline: none;\n    }\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\n\n    return (\n        <nav className=\"site-nav\">\n            <div className=\"brand\">\n                <h4>\n                    Quote Generator\n                </h4>\n            </div>\n            <RandomButton onClick={handleRandom}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#000\" width=\"18px\" height=\"18px\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"/></svg>\n                random \n            </RandomButton>\n        </nav>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nfunction Footer() {\n\n    const SiteFooter = styled.footer`\n        width: 100%;\n        position: absolute;\n        bottom: 0;\n`;\n\n    return (\n        <SiteFooter className=\"site-footer\">\n            <div className=\"container\">\n                <p>&copy;2021. Esther Itolima.</p>\n            </div>\n        </SiteFooter>\n    )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { motion } from 'framer-motion';\nimport axios from 'axios';\n\nfunction Modal({lights, modal, setModal, author, toggleOpen, isOpen }) {\n\n    const [ quotes, setQuotes ] = useState([]);\n    const [ didMount, setDidMount ] = useState(false);\n\n    const handleClick = e => {\n        if(isOpen) {\n            setModal({ display: 'none' });\n            toggleOpen();\n        }\n    }\n    let url = `https://quote-garden.herokuapp.com/api/v3/quotes/random?author=${author}&count=10`;\n\n\n    useEffect(() => {\n        setDidMount(true);\n\n        axios.get(url).then((res) => {\n            setQuotes(res.data.data);\n        }).catch((err) => console.log(err));\n\n        return () => {\n            setDidMount(false);\n        }\n    }, [didMount, url]);\n    /* variants */\n    const modal_open = {\n        open: { \n            opacity: 1, \n            x: 0,\n            display: 'block',\n            transition: {\n                type: \"spring\",\n                stiffness: 75,\n                restDelta: 2,\n                duration: 0.5,\n                delay: 0.5\n            },\n        },\n        closed: { \n            opacity: 0, \n            x: '75vw',\n            transition : {\n                type: \"spring\",\n                duration: 0.5\n            }\n        }\n    }\n\n    const backdrop_open = {\n        open: {\n            opacity: 1,\n            transition: {\n                type: \"spring\"\n            }\n        },\n        closed: { \n            opacity: 0,\n            transition : {\n                type: \"spring\",\n                duration: 0.5,\n                delay: 0.6\n            }\n\n        }\n    }\n\n    const ModalContainer = styled(motion.div)`\n    \n `;\n\nconst ModalHeading = styled.div`\n    text-align: center;\n`;\n\n\nconst CloseModal = styled.div `\n    cursor: pointer;\n    margin-right: 20px;\n    margin-top: 25px;\n    width: 25%;\n    text-align: right;\n`;\n\nconst QuoteContainer = styled.div`\n    margin: 0px 25px 20px;\n    padding: 15px;\n`;\n\nconst GenreLabel = styled.div `\n    width: 100%;\n    text-align: right;\n    text-decoration: underline;\n`;\n\nconst subTextLights = (lights, classnames) => classnames + ` ${lights === 'on' ? 'light-subtext' : 'dark-subtext'}`;\n\nconst List = styled.div `\n    padding-top: 35px;\n`;\n\nconst backgroundLights = (lights) => `${lights === 'on' ? \"light-bg\" : \"dark-bg\" }`;\nconst dimBackground = (lights) => `${lights === 'on' ? \"light-dim\" : \"dark-dim\" }`;\n    \n    return (\n        <div style={modal} variants={backdrop_open}\n        onClick={handleClick} className=\"modal-wrapper backdrop\">\n            <CloseModal style={{ marginRight: '20px', marginTop: '25px'}} \n            onClick={toggleOpen} className=\"exit-modal\">\n                <ArrowBackIcon className=\"dark-text\"  />\n            </CloseModal>\n            <ModalContainer variants={modal_open}\n            animate={isOpen ? 'open' : 'closed'}\n            className={`modal ` + backgroundLights(lights)}>\n                <div className=\"content\">\n                    <ModalHeading className=\"dark-text\">\n                        <h5>Full list of quotes by</h5>\n                        <h1>{author}</h1>\n                    </ModalHeading>\n                    <List className={`list`}>\n                        {quotes && quotes.map((quote) => (\n                            <>\n                                <QuoteContainer key={quote.id} \n                                className={`quote-container ` + dimBackground(lights) + ` ` + subTextLights(lights)}\n                                >\n                                    {quote.quoteText}\n                                    <GenreLabel>\n                                        {quote.quoteGenre}                                    \n                                    </GenreLabel>\n                                </QuoteContainer>\n                            </>\n                        ))}\n                    </List>\n                </div>\n            </ModalContainer>\n        </div>\n    )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport { useCycle } from 'framer-motion';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Modal from '../Modal'\n\nfunction Author({lights, fullname, genre}) {\n\n    const [ modal, setModal ] = useState({ display: 'none' });\n    const [ isOpen, toggleOpen ] = useCycle(true);\n\n    const toggleModal = () => {\n        setModal({ display: 'flex' });\n        toggleOpen(!isOpen);\n    }\n\n\n\n\n    return (\n        <div className={`author-summary ${lights === 'on' ? 'light-dim-bg' : 'dark-dim-bg'}`}>\n            <div className=\"container\">\n                <div className=\"text\">\n                    <h4 className={`${lights === 'on' ? 'light-text' : 'dark-text'}`}>{fullname}</h4>\n                    <p className={`${lights === 'on' ? 'light-subtext' : 'dark-subtext'}`}>{genre}</p>    \n                </div>\n                <ArrowForwardIcon className=\"icon\" onClick={toggleModal} />\n                <Modal \n                modal={modal} setModal={setModal}\n                animate={ !isOpen ? 'open' : 'closed' } lights={lights} \n                author={fullname} isOpen={isOpen} toggleOpen={toggleOpen} />\n                </div>\n        </div>\n    )\n}\n\nexport default Author\n","import React from 'react'\nimport styled from 'styled-components'\nimport Author from './Author'\n\nfunction Quote({text, author, genre}) {\n\n    const QuoteText = styled.h2 `\n        font-size: 2.2em;\n        margin: 0px;\n        \n    `;\n\n    return (\n        <div className=\"quote-wraper\">\n            <div className=\"quote\" id=\"quote\">\n            <div className=\"quote-block\">\n                <div className=\"strip accent-dark\"></div>\n                <span>\n                    <QuoteText className= \"quote-text\" >\n                        {text}\n                    </QuoteText> \n                </span>\n            </div>\n        </div>\n        <Author fullname={author} genre={genre} />\n        </div>\n    )\n}\n\nexport default Quote\n","import React from 'react'\nimport styled from 'styled-components';\n\nfunction Loader(props) {\n\n    const LoaderContainer = styled.div `\n        text-align: center;\n        height: 100%;\n        display: flex;\n        flex-flow: column;\n        justify-content: center;\n        align-items: center;\n    `;\n\n    const LoaderDiv = styled.div`\n        ${props.lights === 'on' ? \"color: var(--almost-black)\" : \"color: var(--lightest)\"}\n    `;\n\n\n    return (\n        <LoaderContainer>\n            <LoaderDiv className=\"loader\">Loading</LoaderDiv>\n            <h4 className={props.lights === 'on' ?\"light-text\" : \"dark-text\"}>{props.message}</h4>\n        </LoaderContainer>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport Loader from './Loader'\n\nfunction LoadingScreen() {\n    return (\n        <div className=\"loading\">\n            <div className=\"container\">\n              <Loader message=\"Finding your daily inspiration\" />  \n            </div>\n        </div>\n    )\n}\n\nexport default LoadingScreen\n","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Quote from './components/quote/Quote'\nimport LoadingScreen from './components/loader/LoadingScreen'\nimport Loader from './components/loader/Loader'\nimport axios from 'axios'\nimport { motion } from 'framer-motion';\n\nfunction App() {\n  const url = 'https://quote-garden.herokuapp.com/api/v3/quotes/random'\n\n\n  const [ random, setRandom ] = useState(false);\n  const [ quote, setQuote ] = useState(null);\n  const [ loading, setLoading ] = useState(true);\n\n  function handleRandom() {\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    axios.get(url).then((res) => {\n      const quoteRes = res.data.data[0]\n      setQuote(quoteRes)\n    }).catch((error) => {\n      console.log(error)\n    })\n\n    return () => { \n      setRandom(false);\n      setLoading(false);\n    }\n  }, [url])\n\n\n  if(random) {\n    setQuote(null);\n    handleRandom();\n  }\n\n  if(loading && !quote){\n    return [\n    (<LoadingScreen />),\n    setLoading(false)]\n  }\n\n  return (\n    <motion.div className=\"App\">\n      <Header handleRandom={handleRandom} />\n\n      <main>\n        {quote ? (\n          <>\n          <Quote text={quote.quoteText} setRandom={setRandom} \n              author={quote.quoteAuthor} genre={quote.quoteGenre} />\n          </>\n        ): (<Loader message=\"Randomizing\"/>)}\n\n      </main>\n\n      <Footer />\n    </motion.div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}